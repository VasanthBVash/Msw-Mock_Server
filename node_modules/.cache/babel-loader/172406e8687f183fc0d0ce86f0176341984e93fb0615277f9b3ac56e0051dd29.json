{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery, useMutation, useQueryClient } from \"react-query\";\nimport axios from \"axios\";\nconst key = \"user\";\nconst endpoint = \"/api/User\";\nexport const useHookForm = () => {\n  _s();\n  const queryClient = useQueryClient();\n  const user = useQuery([key], async () => {\n    const {\n      data\n    } = await axios.get(endpoint);\n    return data;\n  });\n  const add = useMutation(async newuser => {\n    const {\n      data\n    } = await axios.post(endpoint, newuser);\n    return data;\n  });\n  const update = useMutation(async update => {\n    const {\n      data\n    } = await axios.put(endpoint, update);\n    return data;\n  });\n  const remove = useMutation(async id => {\n    const {\n      data\n    } = await axios.delete(`${endpoint}/${id}`);\n    return data;\n  });\n  return {\n    user,\n    add,\n    update,\n    remove\n  };\n};\n_s(useHookForm, \"B32FqUpmPVHX7PVBJr/Eu5tRmJY=\", false, function () {\n  return [useQueryClient, useQuery, useMutation, useMutation, useMutation];\n});","map":{"version":3,"names":["useQuery","useMutation","useQueryClient","axios","key","endpoint","useHookForm","_s","queryClient","user","data","get","add","newuser","post","update","put","remove","id","delete"],"sources":["D:/git/Git master/React-hook-form/src/Services/useHookForm.ts"],"sourcesContent":["import { useQuery, useMutation,QueryClientProvider, useQueryClient } from \"react-query\";\r\nimport axios from \"axios\";\r\n\r\nexport interface IProps {\r\n    userName: string,\r\n    email: string,\r\n    phoneNumber: number,\r\n    password: string,\r\n}\r\n\r\nconst key = \"user\";\r\nconst endpoint = \"/api/User\";\r\n\r\nexport const useHookForm = () => {\r\n\r\n    const queryClient = useQueryClient(); \r\n    const user = useQuery<IProps, Error>([key], async () => {\r\n        const { data } = await axios.get<IProps>(endpoint);\r\n        return data;\r\n    });\r\n\r\n    const add = useMutation<IProps, Error, IProps, any>(async (newuser: IProps) => {\r\n        const { data } = await axios.post(endpoint, newuser);\r\n        return data;\r\n    });\r\n\r\n    const update = useMutation<IProps, Error, IProps, any>(async (update: IProps) => {\r\n        const { data } = await axios.put(endpoint, update);\r\n        return data;\r\n    });\r\n\r\n    const remove = useMutation<string, Error, string, any>(async (id: string) => {\r\n        const { data } = await axios.delete(`${endpoint}/${id}`);\r\n        return data;\r\n    });\r\n\r\n    return { user,add,update,remove };\r\n\r\n}\r\n\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,EAAsBC,cAAc,QAAQ,aAAa;AACvF,OAAOC,KAAK,MAAM,OAAO;AASzB,MAAMC,GAAG,GAAG,MAAM;AAClB,MAAMC,QAAQ,GAAG,WAAW;AAE5B,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE7B,MAAMC,WAAW,GAAGN,cAAc,CAAC,CAAC;EACpC,MAAMO,IAAI,GAAGT,QAAQ,CAAgB,CAACI,GAAG,CAAC,EAAE,YAAY;IACpD,MAAM;MAAEM;IAAK,CAAC,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAASN,QAAQ,CAAC;IAClD,OAAOK,IAAI;EACf,CAAC,CAAC;EAEF,MAAME,GAAG,GAAGX,WAAW,CAA6B,MAAOY,OAAe,IAAK;IAC3E,MAAM;MAAEH;IAAK,CAAC,GAAG,MAAMP,KAAK,CAACW,IAAI,CAACT,QAAQ,EAAEQ,OAAO,CAAC;IACpD,OAAOH,IAAI;EACf,CAAC,CAAC;EAEF,MAAMK,MAAM,GAAGd,WAAW,CAA6B,MAAOc,MAAc,IAAK;IAC7E,MAAM;MAAEL;IAAK,CAAC,GAAG,MAAMP,KAAK,CAACa,GAAG,CAACX,QAAQ,EAAEU,MAAM,CAAC;IAClD,OAAOL,IAAI;EACf,CAAC,CAAC;EAEF,MAAMO,MAAM,GAAGhB,WAAW,CAA6B,MAAOiB,EAAU,IAAK;IACzE,MAAM;MAAER;IAAK,CAAC,GAAG,MAAMP,KAAK,CAACgB,MAAM,CAAE,GAAEd,QAAS,IAAGa,EAAG,EAAC,CAAC;IACxD,OAAOR,IAAI;EACf,CAAC,CAAC;EAEF,OAAO;IAAED,IAAI;IAACG,GAAG;IAACG,MAAM;IAACE;EAAO,CAAC;AAErC,CAAC;AAAAV,EAAA,CAzBYD,WAAW;EAAA,QAEAJ,cAAc,EACrBF,QAAQ,EAKTC,WAAW,EAKRA,WAAW,EAKXA,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}